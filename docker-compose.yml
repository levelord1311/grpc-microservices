version: "3.7"

services:
  postgres-us:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  user-service:
    depends_on:
      - postgres-us
    build: ./grpc-user-service
    ports:
      - 6000:6000
      - 6001:6001
      - 6002:6002

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus:/data:rw
    ports:
      - target: 9090
        published: 9090
        protocol: tcp

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - target: 3000
        published: 3000
        protocol: tcp

  mongo:
    image: mongo:4.2
    restart: always
    volumes:
      - mongodata:/data/db

  jaeger:
    image: jaegertracing/all-in-one:1.28
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411

  zookeeper:
    image: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - ~/kafka/data/zookeeper_data:/var/lib/zookeeper/data
      - ~/kafka/data/zookeeper_log:/var/lib/zookeeper/log

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:9092,kafka-2:9092,kafka-3:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  kafka-1:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
        - "9095:9094"
    environment:
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka-1:9092,OUTSIDE://kafka-1:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,OUTSIDE://localhost:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_BROKER_ID: 500
      KAFKA_offsets_topic_replication_factor: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_data/500:/kafka

  kafka-2:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9096:9094"
    environment:
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka-2:9092,OUTSIDE://kafka-2:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:9092,OUTSIDE://localhost:9096
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_BROKER_ID: 501
      KAFKA_offsets_topic_replication_factor: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_data/501:/kafka

  kafka-3:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9097:9094"
    environment:
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://kafka-3:9092,OUTSIDE://kafka-3:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:9092,OUTSIDE://localhost:9097
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_BROKER_ID: 502
      KAFKA_offsets_topic_replication_factor: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_data/502:/kafka
#
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
#    environment:
#      - http.host=0.0.0.0
#      - transport.host=localhost
#      - network.host=0.0.0.0
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    deploy:
#      resources:
#        limits:
#          memory: 1g
#    volumes:
#      - esdata:/usr/share/elasticsearch/data

#  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/6.x/docker.html

#  # Graylog: https://hub.docker.com/r/graylog/graylog/
#  graylog:
#    image: graylog/graylog:4.2
#    # image: graylog/graylog:4.2-arm64 # - for Apple Macbook M1
#    environment:
#      # CHANGE ME (must be at least 16 characters)!
#      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
#      # Password: admin
#      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
#      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
#    links:
#      - mongo
#      - elasticsearch
#    depends_on:
#      - mongo
#      - elasticsearch
#    ports:
#      # Graylog web interface and REST API
#      - 9000:9000
#      # Syslog TCP
#      - 1514:1514
#      # GELF TCP
#      - 12201:12201
#      # GELF UDP
#      - 12201:12201/udp
#    restart: always


volumes:
#  esdata:
#    driver: local
  mongodata:
    driver: local
